pipeline {
    agent any

    environment {
        IMAGE_NAME = 'my-web-app'
        CONTAINER_NAME = 'my-web-app-container'
        CONTAINER_PORT = '8080'
        HOST_PORT = '7000'
    }

    stages {
        stage('Clone') {
            steps {
                // Clone the repository (change the URL to your Git repo)
                git 'https://github.com/phanindra4568/automationdeployment.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    docker.build("${IMAGE_NAME}", ".")
                }
            }
        }

        stage('Test') {
            steps {
                echo 'Running tests (optional)'
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Stop any existing container with the same name
                    sh "docker rm -f ${CONTAINER_NAME} || true"

                    // Run the container and map the desired ports (host:container)
                    docker.image("${IMAGE_NAME}").run("-d -p ${HOST_PORT}:${CONTAINER_PORT} --name ${CONTAINER_NAME}")
                }
            }
        }
    }

    post {
        always {
            // Clean up Docker resources (optional)
            echo 'Cleaning up Docker resources...'
            sh "docker system prune -f"
        }
    }
}
